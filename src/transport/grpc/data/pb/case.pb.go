// Code generated by protoc-gen-go. DO NOT EDIT.
// source: case.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	case.proto

It has these top-level messages:
	CaseRequest
	CaseResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CaseRequest struct {
	A string `protobuf:"bytes,1,opt,name=a" json:"a,omitempty"`
	B int64  `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *CaseRequest) Reset()                    { *m = CaseRequest{} }
func (m *CaseRequest) String() string            { return proto.CompactTextString(m) }
func (*CaseRequest) ProtoMessage()               {}
func (*CaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CaseRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

func (m *CaseRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type CaseResponse struct {
	V string `protobuf:"bytes,1,opt,name=v" json:"v,omitempty"`
}

func (m *CaseResponse) Reset()                    { *m = CaseResponse{} }
func (m *CaseResponse) String() string            { return proto.CompactTextString(m) }
func (*CaseResponse) ProtoMessage()               {}
func (*CaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CaseResponse) GetV() string {
	if m != nil {
		return m.V
	}
	return ""
}

func init() {
	proto.RegisterType((*CaseRequest)(nil), "pb.CaseRequest")
	proto.RegisterType((*CaseResponse)(nil), "pb.CaseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Case service

type CaseClient interface {
	Case(ctx context.Context, in *CaseRequest, opts ...grpc.CallOption) (*CaseResponse, error)
}

type caseClient struct {
	cc *grpc.ClientConn
}

func NewCaseClient(cc *grpc.ClientConn) CaseClient {
	return &caseClient{cc}
}

func (c *caseClient) Case(ctx context.Context, in *CaseRequest, opts ...grpc.CallOption) (*CaseResponse, error) {
	out := new(CaseResponse)
	err := grpc.Invoke(ctx, "/pb.Case/Case", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Case service

type CaseServer interface {
	Case(context.Context, *CaseRequest) (*CaseResponse, error)
}

func RegisterCaseServer(s *grpc.Server, srv CaseServer) {
	s.RegisterService(&_Case_serviceDesc, srv)
}

func _Case_Case_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaseServer).Case(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Case/Case",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaseServer).Case(ctx, req.(*CaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Case_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Case",
	HandlerType: (*CaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Case",
			Handler:    _Case_Case_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "case.proto",
}

func init() { proto.RegisterFile("case.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0x2c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2, 0xe4, 0xe2, 0x76, 0x4e,
	0x2c, 0x4e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x4c, 0x04, 0xf1, 0x92, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98,
	0x83, 0x18, 0x93, 0x94, 0x64, 0xb8, 0x78, 0x20, 0x4a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41,
	0xb2, 0x65, 0x30, 0xb5, 0x65, 0x46, 0xc6, 0x5c, 0x2c, 0x20, 0x59, 0x21, 0x6d, 0x28, 0xcd, 0xaf,
	0x57, 0x90, 0xa4, 0x87, 0x64, 0xb4, 0x94, 0x00, 0x42, 0x00, 0x62, 0x80, 0x12, 0x43, 0x12, 0x1b,
	0xd8, 0x21, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x3b, 0x95, 0x25, 0x96, 0x00, 0x00,
	0x00,
}
